
WITH account_data AS (
  SELECT
    s.date as date,
    sp.country as country,
    send_interval,
    is_verified,
    is_unsubscribed,
    COUNT(DISTINCT a.id) as acc_cnt
  FROM `DA.account_session` acs
  JOIN `DA.session` s
  ON acs.ga_session_id = s.ga_session_id
  JOIN `DA.session_params` sp
  ON s.ga_session_id = sp.ga_session_id
  JOIN `DA.account` a
  ON acs.account_id = a.id
  GROUP BY 1, 2, 3, 4, 5
),

email_data AS (
  SELECT
    DATE_ADD(s.date, INTERVAL es.sent_date DAY) as date,
    sp.country as country,
    a.send_interval as send_interval,
    a.is_verified as is_verified,
    a.is_unsubscribed as is_unsubscribed,
    COUNT(DISTINCT es.id_message) as sent_cnt,
    COUNT(DISTINCT eo.id_message) as open_cnt,
    COUNT(DISTINCT ev.id_message) as visit_cnt
  FROM `DA.email_sent` es
  LEFT JOIN `DA.email_open` eo
  ON es.id_message = eo.id_message
  LEFT JOIN `DA.email_visit` ev
  ON es.id_message = ev.id_message
  JOIN `DA.account_session` acs
  ON es.id_account = acs.account_id
  JOIN `DA.session` s
  ON acs.ga_session_id = s.ga_session_id
  JOIN `DA.session_params` sp
  ON s.ga_session_id = sp.ga_session_id
  JOIN `DA.account` a
  ON es.id_account = a.id
  GROUP BY 1, 2, 3, 4, 5
),

union_data AS (
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    acc_cnt,
    0 as sent_cnt,
    0 as open_cnt,
    0 as visit_cnt
  FROM account_data

  UNION ALL

  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    0 as acc_cnt,
    sent_cnt,
    open_cnt,
    visit_cnt
  FROM email_data
),

daily_stats AS (
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    SUM(acc_cnt) as acc_cnt,
    SUM(sent_cnt) as sent_cnt,
    SUM(open_cnt) as open_cnt,
    SUM(visit_cnt) as visit_cnt,
    SUM(SUM(acc_cnt)) OVER (PARTITION BY country) as total_country_account_cnt,
    SUM(SUM(sent_cnt)) OVER (PARTITION BY country) as total_country_sent_cnt
  FROM union_data
  GROUP BY 1, 2, 3, 4, 5
),

rank_data AS (
  SELECT *,
    DENSE_RANK() OVER (ORDER BY total_country_account_cnt DESC) as rank_total_country_account_cnt,
    DENSE_RANK() OVER (ORDER BY total_country_sent_cnt DESC) as rank_total_country_sent_cnt
  FROM daily_stats
)

SELECT *
FROM rank_data
WHERE rank_total_country_account_cnt <= 10 OR rank_total_country_sent_cnt <= 10
ORDER BY date, country, send_interval, is_verified, is_unsubscribed




